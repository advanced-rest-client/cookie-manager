{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "A manager for session cookies.\nRenders list of cookies that can be edited.\n\nThe element queries the application for cookies to display by sending\n`session-cookie-list-all` custom event. The handler should set a `result` property\non the details object and cancel the event.\nResult is a promise that resolves to cookies array.\n\n### Example\n\n```html\n<cookie-manager on-session-cookie-list-all></cookie-manager>\n```\n\n```javascript\nwindow.addEventListener('session-cookie-list-all', (e) => {\n e.preventDefault();\n e.detail.result = Promise.resolve(cookies);\n});\n```\n\nThe element listens to `session-cookie-removed` and `session-cookie-changed`\nevents to update, add or delete a cookie from the list.\nThe `detail` object of this events is a cookie.\n\n### Styling\n\n`<cookie-manager>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--cookie-manager` | Mixin applied to the element | `{}`\n`--cookie-manager-loader` | Mixin applied to the `paper-progress` element | `{}`\n`--warning-primary-color` | Main color of the warning messages | `#FF7043`\n`--warning-contrast-color` | Contrast color for the warning color | `#fff`\n`--error-toast` | Mixin applied to the error toast | `{}`\n`--empty-info` | Mixin applied to the label rendered when no data is available. | `{}`\n`--cookie-manager-bottom-sheet` | Mixin applied to the bottom sheet tutorial element | `{}`\n`--context-menu-item-color` | Color of the dropdown menu items | ``\n`--context-menu-item-background-color` | Background olor of the dropdown menu items | ``\n`--context-menu-item-color-hover` | Color of the dropdown menu items when hovering | ``\n`--context-menu-item-background-color-hover` | Background olor of the dropdown menu items when hovering | ``\n`--bottom-sheet-width` | Width of the `<bottom-sheet>` element | `100%`\n`--bottom-sheet-max-width` | Max width of the `<bottom-sheet>` element | `700px`\n`--cookie-manager-bottom-sheet-right` | Right position of the `<bottom-sheet>` element | `40px`\n`--cookie-manager-bottom-sheet-left` | Left position of the `<bottom-sheet>` element | `auto`",
      "summary": "",
      "path": "cookie-manager.js",
      "properties": [
        {
          "name": "items",
          "type": "Array | null | undefined",
          "description": "List of cookies to display",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 295,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "hasItems",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if `items` is set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 6
            },
            "end": {
              "line": 302,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "loading",
          "type": "boolean | null | undefined",
          "description": "True when loading data from the datastore.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 308,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isSearch",
          "type": "boolean | null | undefined",
          "description": "Current search query.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 310,
              "column": 6
            },
            "end": {
              "line": 313,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "listHidden",
          "type": "boolean | null | undefined",
          "description": "Computed value, `true` when the lists is hidden.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "searchListEmpty",
          "type": "boolean | null | undefined",
          "description": "Computed value. True when the query has been performed and no items\nhas been returned. It is different from `listHidden` where less\nconditions has to be checked. It is set to true when it doesn't\nhave items, is not loading and is search.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 328,
              "column": 6
            },
            "end": {
              "line": 331,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "dataUnavailable",
          "type": "boolean | null | undefined",
          "description": "A computed flag that determines that the query to the databastore\nhas been performed and empty result was returned.\nThis can be true only if not in search.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 337,
              "column": 6
            },
            "end": {
              "line": 340,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_tutorialAllowed",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 341,
              "column": 6
            },
            "end": {
              "line": 341,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_exportOptionsOpened",
          "type": "boolean | null | undefined",
          "description": "Indicates that the export options panel is currently rendered.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 345,
              "column": 6
            },
            "end": {
              "line": 345,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_exportOptions",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 346,
              "column": 6
            },
            "end": {
              "line": 357,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 366,
              "column": 2
            },
            "end": {
              "line": 376,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 377,
              "column": 2
            },
            "end": {
              "line": 381,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "reset",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 383,
              "column": 2
            },
            "end": {
              "line": 388,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "queryCookies",
          "description": "Queries application for list of cookies.\nIt dispatches `session-cookie-list-all` cuystom event.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 394,
              "column": 2
            },
            "end": {
              "line": 410,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise",
            "desc": "Resolved when cookies are available."
          }
        },
        {
          "name": "_processCookies",
          "description": "Processes incomming and sets cookies.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 415,
              "column": 2
            },
            "end": {
              "line": 420,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "cookies",
              "type": "?Array.<Object>"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeHasItems",
          "description": "Computes value for `hasItems` property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 426,
              "column": 2
            },
            "end": {
              "line": 428,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "size",
              "type": "Number",
              "description": "Size of the `items` array"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_resetSearch",
          "description": "Resets the state after finishing search. It restors previous items\nwithout changing query options.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 433,
              "column": 2
            },
            "end": {
              "line": 440,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeListHidden",
          "description": "Computes value of the `listHidden` property.\nList is hidden when no items are found and it is not searching.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 450,
              "column": 2
            },
            "end": {
              "line": 455,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasItems",
              "type": "Boolean"
            },
            {
              "name": "isSearch",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_computeSearchListEmpty",
          "description": "Computes value for the `searchListEmpty` property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 458,
              "column": 2
            },
            "end": {
              "line": 460,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasItems"
            },
            {
              "name": "loading"
            },
            {
              "name": "isSearch"
            }
          ]
        },
        {
          "name": "_computeDataUnavailable",
          "description": "Computes value for the `dataUnavailable` proeprty",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 463,
              "column": 2
            },
            "end": {
              "line": 465,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hasItems"
            },
            {
              "name": "loading"
            },
            {
              "name": "isSearch"
            }
          ]
        },
        {
          "name": "_onDelete",
          "description": "Handles items delete event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 468,
              "column": 2
            },
            "end": {
              "line": 471,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_delete",
          "description": "Performs a delete action of cookie items.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 478,
              "column": 2
            },
            "end": {
              "line": 499,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "deleted",
              "type": "Array.<Object>",
              "description": "List of deleted items."
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_acceptExportOptions",
          "description": "Handler for `accept` event dispatched by export options element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 506,
              "column": 2
            },
            "end": {
              "line": 510,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "Promise",
            "desc": "Result of calling `_doExportItems()`"
          }
        },
        {
          "name": "_cancelExportOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 512,
              "column": 2
            },
            "end": {
              "line": 515,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_doExportItems",
          "description": "Calls `_dispatchExportData()` from requests lists mixin with\nprepared arguments",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 524,
              "column": 2
            },
            "end": {
              "line": 544,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "cookies",
              "type": "Array.<Object>",
              "description": "List of cookies to export."
            },
            {
              "name": "detail",
              "type": "String",
              "description": "Export configuration"
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_dispatchExportData",
          "description": "Dispatches `arc-data-export` event and returns it.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 551,
              "column": 2
            },
            "end": {
              "line": 566,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "cookies",
              "type": "Array.<Object>",
              "description": "List of cookies to export."
            },
            {
              "name": "opts",
              "type": "Object"
            }
          ],
          "return": {
            "type": "CustomEvent"
          }
        },
        {
          "name": "_onExport",
          "description": "Handles export event from the list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 571,
              "column": 2
            },
            "end": {
              "line": 574,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_exportAllFile",
          "description": "Menu item handler to export all data to file",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 580,
              "column": 2
            },
            "end": {
              "line": 588,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise",
            "desc": "Result of calling `_doExportItems()`"
          }
        },
        {
          "name": "openExportAll",
          "description": "Menu item handler to export all data to file",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 593,
              "column": 2
            },
            "end": {
              "line": 597,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onSearch",
          "description": "Handler for the `list-items-search` event fired by the list view\nSets `isSearch` property and calls `query()` function to perform the\nquery.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 605,
              "column": 2
            },
            "end": {
              "line": 607,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "query",
          "description": "Performs a query on a list.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 614,
              "column": 2
            },
            "end": {
              "line": 653,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "query",
              "type": "String",
              "description": "The query to performs. Pass empty string\n(or nothing) to reset the query."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearMenuOptions",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 655,
              "column": 2
            },
            "end": {
              "line": 658,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_deleteAllClick",
          "description": "Handler for delete all menu option click",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 661,
              "column": 2
            },
            "end": {
              "line": 664,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onClearDialogResult",
          "description": "Called when delete datastore dialog is closed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 666,
              "column": 2
            },
            "end": {
              "line": 675,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_compareCookies",
          "description": "Compares two cookies.\nCookies are the same if `domain`, `path` and `name` matches.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 684,
              "column": 2
            },
            "end": {
              "line": 695,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "Object",
              "description": "A cookie to compare"
            },
            {
              "name": "b",
              "type": "[type]",
              "description": "Other cookie to compare"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if the two cookies are the same."
          }
        },
        {
          "name": "_getCookieIndex",
          "description": "Returns cookie index on the `items` list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 702,
              "column": 2
            },
            "end": {
              "line": 708,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "cookie",
              "type": "Object",
              "description": "A cookie object as in Electron API."
            }
          ],
          "return": {
            "type": "Number",
            "desc": "Cookie index on the list or `-1` if not found."
          }
        },
        {
          "name": "_onCookieRemoved",
          "description": "Clears a cookie from the list if matching cookie is n the list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 710,
              "column": 2
            },
            "end": {
              "line": 724,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onCookieChanged",
          "description": "Updates the cookie on the list or adds new one.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 726,
              "column": 2
            },
            "end": {
              "line": 744,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onDetails",
          "description": "Opens details panel for the cookie",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 749,
              "column": 2
            },
            "end": {
              "line": 753,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_deleteDetails",
          "description": "Deletes a request from the details panel.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 758,
              "column": 2
            },
            "end": {
              "line": 762,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_editDetails",
          "description": "Opens request details editor in place of the request details applet.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 766,
              "column": 2
            },
            "end": {
              "line": 771,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resizeSheetContent",
          "description": "Forces bottom sheet content to resize",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 773,
              "column": 2
            },
            "end": {
              "line": 775,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resizeEditorSheetContent",
          "description": "Forces bottom sheet content to resize",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 777,
              "column": 2
            },
            "end": {
              "line": 779,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resizeExportContent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 780,
              "column": 2
            },
            "end": {
              "line": 782,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_cancelEdit",
          "description": "Handles cookie edit cancel event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 784,
              "column": 2
            },
            "end": {
              "line": 787,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "addCookie",
          "description": "Opens an empty cookie editor.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 791,
              "column": 2
            },
            "end": {
              "line": 795,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_saveEdit",
          "description": "Saves cookie editts be sending `session-cookie-update` event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 801,
              "column": 2
            },
            "end": {
              "line": 828,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_generateFileName",
          "description": "Generates file name for the export options panel.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 833,
              "column": 2
            },
            "end": {
              "line": 835,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "String"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 87,
          "column": 0
        },
        "end": {
          "line": 863,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "PolymerElement",
      "name": "UiElements.CookieManager",
      "attributes": [
        {
          "name": "items",
          "description": "List of cookies to display",
          "sourceRange": {
            "start": {
              "line": 295,
              "column": 6
            },
            "end": {
              "line": 295,
              "column": 26
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "has-items",
          "description": "Computed value, true if `items` is set.",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 6
            },
            "end": {
              "line": 302,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "loading",
          "description": "True when loading data from the datastore.",
          "sourceRange": {
            "start": {
              "line": 304,
              "column": 6
            },
            "end": {
              "line": 308,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-search",
          "description": "Current search query.",
          "sourceRange": {
            "start": {
              "line": 310,
              "column": 6
            },
            "end": {
              "line": 313,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "list-hidden",
          "description": "Computed value, `true` when the lists is hidden.",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 6
            },
            "end": {
              "line": 321,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "search-list-empty",
          "description": "Computed value. True when the query has been performed and no items\nhas been returned. It is different from `listHidden` where less\nconditions has to be checked. It is set to true when it doesn't\nhave items, is not loading and is search.",
          "sourceRange": {
            "start": {
              "line": 328,
              "column": 6
            },
            "end": {
              "line": 331,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "data-unavailable",
          "description": "A computed flag that determines that the query to the databastore\nhas been performed and empty result was returned.\nThis can be true only if not in search.",
          "sourceRange": {
            "start": {
              "line": 337,
              "column": 6
            },
            "end": {
              "line": 340,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "session-cookie-list-all",
          "description": "Fired when queries the application for list of session cookies.\nThe element expects the `result` property to be set on the `detail`\nobject with a promise resolved to a list of cookies.\n\nThis event is cancelable.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "session-cookie-remove",
          "description": "Fired when cookies are to be deleted by the application.\n\nThe event is cancelable.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "session-cookie-update",
          "description": "Fired when the cookie should be updated by the application.\n\nThe event is cancelable.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "has-items-changed",
          "description": "Fired when the `hasItems` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "loading-changed",
          "description": "Fired when the `loading` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cookie-manager"
    }
  ]
}
